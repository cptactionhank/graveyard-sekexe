#!/bin/bash

REQUIREMENTS="/usr/bin/shunit2 /bin/nc"
for R in $REQUIREMENTS; do
    if [ ! -x "$R" ]; then
        echo "Checking requirement $R... Not found. Aborting"
        exit 1
    fi
done

handleSigTerm()
{
    echo SIGTERM
}

oneTimeSetUp()
{
    trap "handleSigTerm" TERM
}

testSlirpRedirNeedsHostIp()
{
    HOST_IP='' SLIRP_PORTS=12345 ./run -d "true"

    assertNotEquals "Providing SLIRP_PORTS should require HOST_IP" 0 $?
}

testGuestReachableViaSlirp()
{
    # for an address to bind to, try both eth0 and venet0:0 (used by travis ci)
    host_ip=$( (/sbin/ifconfig eth0 || /sbin/ifconfig venet0:0) | \
        grep 'inet addr' | awk -F: '{print $2}' | awk '{print $1}')
    port=12345

    HOST_IP="$host_ip" SLIRP_PORTS=$port ./run -d "nc -l $port" &
    UML_PID=$!

    # give uml a little time to start
    sleep 5

    nc -w 5 -z "$host_ip" "$port"
    assertEquals "Service should be reachable via slirp" 0 $?

    /bin/kill "$UML_PID" >/dev/null 2>/dev/null
}


test_true()
{
    ./run -d true
    local exit_code="$?"
    assertEquals "Should exit with code 0" 0 $exit_code
}

test_false()
{
    ./run -d false
    local exit_code="$?"
    assertEquals "Should exit with code 1" 1 $exit_code
}

test_exit_2()
{
    ./run -d exit 2
    local exit_code="$?"
    assertEquals "Should exit with code 2" 2 $exit_code
}

test_exit_25()
{
    ./run -d exit 25
    local exit_code="$?"
    assertEquals "Should exit with code 25" 25 $exit_code
}

test_running_docker()
{
    SLIRP_HOST=$(/sbin/ifconfig venet0:0 | grep 'inet addr' | awk -F: '{print $2}' | awk '{print $1}')
    DOCKER_HOST="tcp://$SLIRP_HOST:2375"
    SLIRP_PORTS="2375 8000 $(seq 49153 49253)"

    ./run -d docker -d -D -H tcp://0.0.0.0:2375 &
    while ! docker info; do sleep 10; done

    local exit_code="$?"
    assertEquals "Should successful connect to docker" 0 $exit_code
}

. /usr/bin/shunit2
